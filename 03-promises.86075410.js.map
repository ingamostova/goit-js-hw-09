{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,wBAC/BI,IAAKL,SAASC,cAAc,WAK9B,SAASK,EAAcC,EAAUL,GAC/B,OAAO,IAAIM,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCN,EAAWO,YAAW,WAChBH,EAEFF,EAAQ,uBAAwCM,OAAfR,EAAS,QAAYQ,OAANb,EAAM,OAGtDQ,EAAO,sBAAqCK,OAAfR,EAAS,QAAYQ,OAANb,EAAM,M,GAEnDA,E,IAbPJ,EAAKC,KAAKiB,iBAAiB,UAiB3B,SAAqBC,GACnBA,EAAIC,iBACJ,IACE,IAAIC,EAAI,EAAGhB,EAAO,EAClBgB,GAAKrB,EAAKM,OAAOgB,MACjBD,GAAK,EAAGhB,GAAQkB,OAAOvB,EAAKK,KAAKiB,OACjC,CACA,IAAIE,EAAaD,OAAOvB,EAAKI,MAAMkB,OAASjB,EAC5CG,EAAca,EAAGG,GACdC,MAAK,SAAAC,G,OAAU5B,EAAA6B,OAAOC,QAAQF,E,IAC9BG,OAAM,SAAAC,G,OAAShC,EAAA6B,OAAOI,QAAQD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n  btn: document.querySelector('button'),\n};\n\nrefs.form.addEventListener('submit', onBtnSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    position = setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        // Reject\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n\nfunction onBtnSubmit(evt) {\n  evt.preventDefault();\n  for (\n    let i = 1, step = 0;\n    i <= refs.amount.value;\n    i += 1, step += Number(refs.step.value)\n  ) {\n    let delayRange = Number(refs.delay.value) + step;\n    createPromise(i, delayRange)\n      .then(result => Notify.success(result))\n      .catch(error => Notify.failure(error));\n  }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","btn","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","addEventListener","evt","preventDefault","i","value","Number","delayRange","then","result","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.86075410.js.map"}