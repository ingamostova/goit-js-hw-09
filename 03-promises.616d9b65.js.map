{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,wBAC/BI,IAAKL,SAASC,cAAc,WAK9B,SAASK,EAAcC,EAAUL,GAC/B,OAAO,IAAIM,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCN,EAAWO,YAAW,KAChBH,EAEFF,EAAQ,uBAAqBF,QAAiBL,OAG9CQ,EAAO,sBAAoBH,QAAeL,MAAU,GAErDA,EAAM,G,CAbbJ,EAAKC,KAAKgB,iBAAiB,UAiB3B,SAAqBC,GACnBA,EAAIC,iBACJ,IACE,IAAIC,EAAI,EAAGf,EAAO,EAClBe,GAAKpB,EAAKM,OAAOe,MACjBD,GAAK,EAAGf,GAAQiB,OAAOtB,EAAKK,KAAKgB,OACjC,CACA,IAAIE,EAAaD,OAAOtB,EAAKI,MAAMiB,OAAShB,EAC5CG,EAAcY,EAAGG,GACdC,MAAKC,GAAU3B,EAAA4B,OAAOC,QAAQF,KAC9BG,OAAMC,GAAS/B,EAAA4B,OAAOI,QAAQD,I","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n  btn: document.querySelector('button'),\n};\n\nrefs.form.addEventListener('submit', onBtnSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    position = setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        // Reject\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n\nfunction onBtnSubmit(evt) {\n  evt.preventDefault();\n  for (\n    let i = 1, step = 0;\n    i <= refs.amount.value;\n    i += 1, step += Number(refs.step.value)\n  ) {\n    let delayRange = Number(refs.delay.value) + step;\n    createPromise(i, delayRange)\n      .then(result => Notify.success(result))\n      .catch(error => Notify.failure(error));\n  }\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delay","step","amount","btn","$47d4ff9957288465$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","i","value","Number","delayRange","then","result","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.616d9b65.js.map"}